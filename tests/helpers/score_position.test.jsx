import { scorePosition } from '../../src/helpers';

describe('scorePosition', () => {
  describe('horizontal', () => {
    it('for 1 player and 3 empty ', () => {
   
     const board = [
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,1,0,0,0,0,0],
     ];
   
     expect(scorePosition(board,1)).toBe(0);
      
    });
   
    it('for 2 consecutive player and 2 empty', () => {
   
     const board = [
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,1,1,0,0,0,0],
     ];
   
     expect(scorePosition(board,1)).toBe(6);
      
    });

    it('for 2 single-spaced player and 2 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,1,0,1,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(4);
       
     });

     it('for 2 2-spaced player and 2 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,1,0,0,1,0],
      ];
    
      expect(scorePosition(board,1)).toBe(2);
       
     });

     it('for 3 consecutive player and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,1,1,1,0,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5 + 5 + 2);
       
     });

     it('for 3 1-spaced player and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,1,0,1,1,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(5 + 2 + 2 + 2);
       
     });

     it('for 3 consecutive opponent and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,2,2,2,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(-4 - 4);
       
     });

     it('for 3 1-spaced opponent and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,2,0,2,2],
      ];
    
      expect(scorePosition(board,1)).toBe(-4);
       
     });

     it('for 4 consecutive player', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,1,1,1,1,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5 + 100 + 5 + 2);
       
     });

     
  });

  describe('vertical', () => {
    it('for 1 player and 3 empty ', () => {
   
     const board = [
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,1],
     ];
   
     expect(scorePosition(board,1)).toBe(0);
      
    });
   
    it('for 2 consecutive player and 2 empty', () => {
   
     const board = [
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,1],
       [0,0,0,0,0,0,0,1],
     ];
   
     expect(scorePosition(board,1)).toBe(2);
      
    });

    it('for 3 consecutive player and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,1],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5);
       
     });

     it('for 3 consecutive opponent and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,2,0],
        [0,0,0,0,0,0,2,0],
        [0,0,0,0,0,0,2,0],
      ];
    
      expect(scorePosition(board,1)).toBe(-4);
       
     });

     it('for 4 consecutive player and 0 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,1],
        [0,0,0,0,0,0,0,1],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5 + 100);
       
     });
  });

  describe('diagonal up', () => {
    it('for 1 player and 3 empty ', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,0],
      ];
   
      expect(scorePosition(board,1)).toBe(0);
      
    });
   
    it('for 2 consecutive player and 2 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,1,0,0,0,0,0,0],
        [1,2,0,0,0,0,0,0],
      ];
   
      expect(scorePosition(board,1)).toBe(2);
      
    });

    it('for 3 consecutive player and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,1,0,0,0,0,0],
        [0,1,2,0,0,0,0,0],
        [1,2,2,0,0,0,0,0],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5);
       
     });

    it('for 4 consecutive player and 0 empty', () => {
  
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,1,0,0,0,0],
        [0,0,1,2,0,0,0,0],
        [0,1,2,2,0,0,0,0],
        [1,2,2,2,0,0,0,0],
      ];
  
      expect(scorePosition(board,1)).toBe(2 + 5 + 100 -4 -4);
      
    });
  });

  describe('diagonal down', () => {
    it('for 1 player and 3 empty ', () => {
   
     const board = [
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,0],
       [0,0,0,0,0,0,0,1],
     ];
   
     expect(scorePosition(board,1)).toBe(0);
      
    });
   
    it('for 2 consecutive player and 2 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,0],
        [0,0,0,0,0,0,2,1],
      ];
   
      expect(scorePosition(board,1)).toBe(2);
      
    });

    it('for 3 consecutive player and 1 empty', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,1,0,0],
        [0,0,0,0,0,2,1,0],
        [0,0,0,0,0,2,2,1],
      ];
    
      expect(scorePosition(board,1)).toBe(2 + 5);
       
     });


    it('for 4 consecutive player and 0 empty', () => {
  
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,1,0,0,0],
        [0,0,0,0,2,1,0,0],
        [0,0,0,0,2,2,1,0],
        [0,0,0,0,2,2,2,1],
      ];
  
      expect(scorePosition(board,1)).toBe(2 + 5 + 100 -4 -4);
      
    });
  });


  describe.only('particular orientation', () => {
    it('3 player and 2 ai', () => {
   
      const board = [
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0],
        [1,0,0,0,0,0,0,0],
        [2,2,0,0,1,1,0,0],
      ];
    
      expect(scorePosition(board,2)).toBe(2);
       
     });
  });
});